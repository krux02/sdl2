## do not import this, it is included in sdl2.nim

type
  Scancode* {.size: sizeof(int32).} = enum
    SDL_SCANCODE_UNKNOWN = 0,
    SDL_SCANCODE_A = 4, SDL_SCANCODE_B = 5, SDL_SCANCODE_C = 6,
    SDL_SCANCODE_D = 7, SDL_SCANCODE_E = 8, SDL_SCANCODE_F = 9,
    SDL_SCANCODE_G = 10, SDL_SCANCODE_H = 11, SDL_SCANCODE_I = 12,
    SDL_SCANCODE_J = 13, SDL_SCANCODE_K = 14, SDL_SCANCODE_L = 15,
    SDL_SCANCODE_M = 16, SDL_SCANCODE_N = 17, SDL_SCANCODE_O = 18,
    SDL_SCANCODE_P = 19, SDL_SCANCODE_Q = 20, SDL_SCANCODE_R = 21,
    SDL_SCANCODE_S = 22, SDL_SCANCODE_T = 23, SDL_SCANCODE_U = 24,
    SDL_SCANCODE_V = 25, SDL_SCANCODE_W = 26, SDL_SCANCODE_X = 27,
    SDL_SCANCODE_Y = 28, SDL_SCANCODE_Z = 29, SDL_SCANCODE_1 = 30,
    SDL_SCANCODE_2 = 31, SDL_SCANCODE_3 = 32, SDL_SCANCODE_4 = 33,
    SDL_SCANCODE_5 = 34, SDL_SCANCODE_6 = 35, SDL_SCANCODE_7 = 36,
    SDL_SCANCODE_8 = 37, SDL_SCANCODE_9 = 38, SDL_SCANCODE_0 = 39,
    SDL_SCANCODE_RETURN = 40, SDL_SCANCODE_ESCAPE = 41,
    SDL_SCANCODE_BACKSPACE = 42, SDL_SCANCODE_TAB = 43,
    SDL_SCANCODE_SPACE = 44, SDL_SCANCODE_MINUS = 45,
    SDL_SCANCODE_EQUALS = 46, SDL_SCANCODE_LEFTBRACKET = 47,
    SDL_SCANCODE_RIGHTBRACKET = 48, SDL_SCANCODE_BACKSLASH = 49,
    SDL_SCANCODE_NONUSHASH = 50, #
    SDL_SCANCODE_SEMICOLON = 51, SDL_SCANCODE_APOSTROPHE = 52, SDL_SCANCODE_GRAVE = 53,
    SDL_SCANCODE_COMMA = 54, SDL_SCANCODE_PERIOD = 55,
    SDL_SCANCODE_SLASH = 56, SDL_SCANCODE_CAPSLOCK = 57, SDL_SCANCODE_F1 = 58,
    SDL_SCANCODE_F2 = 59, SDL_SCANCODE_F3 = 60, SDL_SCANCODE_F4 = 61,
    SDL_SCANCODE_F5 = 62, SDL_SCANCODE_F6 = 63, SDL_SCANCODE_F7 = 64,
    SDL_SCANCODE_F8 = 65, SDL_SCANCODE_F9 = 66, SDL_SCANCODE_F10 = 67,
    SDL_SCANCODE_F11 = 68, SDL_SCANCODE_F12 = 69,
    SDL_SCANCODE_PRINTSCREEN = 70, SDL_SCANCODE_SCROLLLOCK = 71,
    SDL_SCANCODE_PAUSE = 72, SDL_SCANCODE_INSERT = 73,
    SDL_SCANCODE_HOME = 74, SDL_SCANCODE_PAGEUP = 75,
    SDL_SCANCODE_DELETE = 76, SDL_SCANCODE_END = 77,
    SDL_SCANCODE_PAGEDOWN = 78, SDL_SCANCODE_RIGHT = 79,
    SDL_SCANCODE_LEFT = 80, SDL_SCANCODE_DOWN = 81, SDL_SCANCODE_UP = 82, SDL_SCANCODE_NUMLOCKCLEAR = 83,
    SDL_SCANCODE_KP_DIVIDE = 84, SDL_SCANCODE_KP_MULTIPLY = 85,
    SDL_SCANCODE_KP_MINUS = 86, SDL_SCANCODE_KP_PLUS = 87,
    SDL_SCANCODE_KP_ENTER = 88, SDL_SCANCODE_KP_1 = 89,
    SDL_SCANCODE_KP_2 = 90, SDL_SCANCODE_KP_3 = 91, SDL_SCANCODE_KP_4 = 92,
    SDL_SCANCODE_KP_5 = 93, SDL_SCANCODE_KP_6 = 94, SDL_SCANCODE_KP_7 = 95,
    SDL_SCANCODE_KP_8 = 96, SDL_SCANCODE_KP_9 = 97, SDL_SCANCODE_KP_0 = 98,
    SDL_SCANCODE_KP_PERIOD = 99, SDL_SCANCODE_NONUSBACKSLASH = 100,
    SDL_SCANCODE_APPLICATION = 101, #*< windows contextual menu, compose
    SDL_SCANCODE_POWER = 102,
    SDL_SCANCODE_KP_EQUALS = 103, SDL_SCANCODE_F13 = 104,
    SDL_SCANCODE_F14 = 105, SDL_SCANCODE_F15 = 106, SDL_SCANCODE_F16 = 107,
    SDL_SCANCODE_F17 = 108, SDL_SCANCODE_F18 = 109, SDL_SCANCODE_F19 = 110,
    SDL_SCANCODE_F20 = 111, SDL_SCANCODE_F21 = 112, SDL_SCANCODE_F22 = 113,
    SDL_SCANCODE_F23 = 114, SDL_SCANCODE_F24 = 115,
    SDL_SCANCODE_EXECUTE = 116, SDL_SCANCODE_HELP = 117,
    SDL_SCANCODE_MENU = 118, SDL_SCANCODE_SELECT = 119,
    SDL_SCANCODE_STOP = 120, SDL_SCANCODE_AGAIN = 121, #*< redo
    SDL_SCANCODE_UNDO = 122, SDL_SCANCODE_CUT = 123, SDL_SCANCODE_COPY = 124,
    SDL_SCANCODE_PASTE = 125, SDL_SCANCODE_FIND = 126,
    SDL_SCANCODE_MUTE = 127, SDL_SCANCODE_VOLUMEUP = 128, SDL_SCANCODE_VOLUMEDOWN = 129,
    SDL_SCANCODE_KP_COMMA = 133, SDL_SCANCODE_KP_EQUALSAS400 = 134, SDL_SCANCODE_INTERNATIONAL1 = 135,
    SDL_SCANCODE_INTERNATIONAL2 = 136, SDL_SCANCODE_INTERNATIONAL3 = 137, #*< Yen
    SDL_SCANCODE_INTERNATIONAL4 = 138, SDL_SCANCODE_INTERNATIONAL5 = 139,
    SDL_SCANCODE_INTERNATIONAL6 = 140, SDL_SCANCODE_INTERNATIONAL7 = 141,
    SDL_SCANCODE_INTERNATIONAL8 = 142, SDL_SCANCODE_INTERNATIONAL9 = 143, SDL_SCANCODE_LANG1 = 144, #*< Hangul/English toggle
    SDL_SCANCODE_LANG2 = 145, #*< Hanja conversion
    SDL_SCANCODE_LANG3 = 146, #*< Katakana
    SDL_SCANCODE_LANG4 = 147, #*< Hiragana
    SDL_SCANCODE_LANG5 = 148, #*< Zenkaku/Hankaku
    SDL_SCANCODE_LANG6 = 149, #*< reserved
    SDL_SCANCODE_LANG7 = 150, #*< reserved
    SDL_SCANCODE_LANG8 = 151, #*< reserved
    SDL_SCANCODE_LANG9 = 152, #*< reserved
    SDL_SCANCODE_ALTERASE = 153, #*< Erase-Eaze
    SDL_SCANCODE_SYSREQ = 154, SDL_SCANCODE_CANCEL = 155,
    SDL_SCANCODE_CLEAR = 156, SDL_SCANCODE_PRIOR = 157,
    SDL_SCANCODE_RETURN2 = 158, SDL_SCANCODE_SEPARATOR = 159,
    SDL_SCANCODE_OUT = 160, SDL_SCANCODE_OPER = 161,
    SDL_SCANCODE_CLEARAGAIN = 162, SDL_SCANCODE_CRSEL = 163,
    SDL_SCANCODE_EXSEL = 164, SDL_SCANCODE_KP_00 = 176,
    SDL_SCANCODE_KP_000 = 177, SDL_SCANCODE_THOUSANDSSEPARATOR = 178,
    SDL_SCANCODE_DECIMALSEPARATOR = 179, SDL_SCANCODE_CURRENCYUNIT = 180,
    SDL_SCANCODE_CURRENCYSUBUNIT = 181, SDL_SCANCODE_KP_LEFTPAREN = 182,
    SDL_SCANCODE_KP_RIGHTPAREN = 183, SDL_SCANCODE_KP_LEFTBRACE = 184,
    SDL_SCANCODE_KP_RIGHTBRACE = 185, SDL_SCANCODE_KP_TAB = 186,
    SDL_SCANCODE_KP_BACKSPACE = 187, SDL_SCANCODE_KP_A = 188,
    SDL_SCANCODE_KP_B = 189, SDL_SCANCODE_KP_C = 190, SDL_SCANCODE_KP_D = 191,
    SDL_SCANCODE_KP_E = 192, SDL_SCANCODE_KP_F = 193,
    SDL_SCANCODE_KP_XOR = 194, SDL_SCANCODE_KP_POWER = 195,
    SDL_SCANCODE_KP_PERCENT = 196, SDL_SCANCODE_KP_LESS = 197,
    SDL_SCANCODE_KP_GREATER = 198, SDL_SCANCODE_KP_AMPERSAND = 199,
    SDL_SCANCODE_KP_DBLAMPERSAND = 200, SDL_SCANCODE_KP_VERTICALBAR = 201,
    SDL_SCANCODE_KP_DBLVERTICALBAR = 202, SDL_SCANCODE_KP_COLON = 203,
    SDL_SCANCODE_KP_HASH = 204, SDL_SCANCODE_KP_SPACE = 205,
    SDL_SCANCODE_KP_AT = 206, SDL_SCANCODE_KP_EXCLAM = 207,
    SDL_SCANCODE_KP_MEMSTORE = 208, SDL_SCANCODE_KP_MEMRECALL = 209,
    SDL_SCANCODE_KP_MEMCLEAR = 210, SDL_SCANCODE_KP_MEMADD = 211,
    SDL_SCANCODE_KP_MEMSUBTRACT = 212, SDL_SCANCODE_KP_MEMMULTIPLY = 213,
    SDL_SCANCODE_KP_MEMDIVIDE = 214, SDL_SCANCODE_KP_PLUSMINUS = 215,
    SDL_SCANCODE_KP_CLEAR = 216, SDL_SCANCODE_KP_CLEARENTRY = 217,
    SDL_SCANCODE_KP_BINARY = 218, SDL_SCANCODE_KP_OCTAL = 219,
    SDL_SCANCODE_KP_DECIMAL = 220, SDL_SCANCODE_KP_HEXADECIMAL = 221,
    SDL_SCANCODE_LCTRL = 224, SDL_SCANCODE_LSHIFT = 225, SDL_SCANCODE_LALT = 226, #*< alt, option
    SDL_SCANCODE_LGUI = 227, #*< windows, command (apple), meta
    SDL_SCANCODE_RCTRL = 228, SDL_SCANCODE_RSHIFT = 229, SDL_SCANCODE_RALT = 230, #*< alt gr, option
    SDL_SCANCODE_RGUI = 231, #*< windows, command (apple), meta
    SDL_SCANCODE_MODE = 257,
    SDL_SCANCODE_AUDIONEXT = 258, SDL_SCANCODE_AUDIOPREV = 259,
    SDL_SCANCODE_AUDIOSTOP = 260, SDL_SCANCODE_AUDIOPLAY = 261,
    SDL_SCANCODE_AUDIOMUTE = 262, SDL_SCANCODE_MEDIASELECT = 263,
    SDL_SCANCODE_WWW = 264, SDL_SCANCODE_MAIL = 265,
    SDL_SCANCODE_CALCULATOR = 266, SDL_SCANCODE_COMPUTER = 267,
    SDL_SCANCODE_AC_SEARCH = 268, SDL_SCANCODE_AC_HOME = 269,
    SDL_SCANCODE_AC_BACK = 270, SDL_SCANCODE_AC_FORWARD = 271,
    SDL_SCANCODE_AC_STOP = 272, SDL_SCANCODE_AC_REFRESH = 273, SDL_SCANCODE_AC_BOOKMARKS = 274,
    SDL_SCANCODE_BRIGHTNESSDOWN = 275, SDL_SCANCODE_BRIGHTNESSUP = 276, SDL_SCANCODE_DISPLAYSWITCH = 277,
    SDL_SCANCODE_KBDILLUMTOGGLE = 278, SDL_SCANCODE_KBDILLUMDOWN = 279,
    SDL_SCANCODE_KBDILLUMUP = 280, SDL_SCANCODE_EJECT = 281, SDL_SCANCODE_SLEEP = 282,
    SDL_NUM_SCANCODES = 512 #*< not a key, just marks the number of scancodes
                            #                                 for array bounds

const SDLK_SCANCODE_MASK = 1 shl 30
template SDL_SCANCODE_TO_KEYCODE(some: ScanCode): expr = (some.int32 or SDLK_SCANCODE_MASK)

const
  K_UNKNOWN*: int32 = 0

  K_BACKSPACE*: int32 = '\b'.int32
  K_TAB*: int32 = '\t'.int32
  K_RETURN*: int32 = '\r'.int32
  K_ESCAPE*: int32 = '\27'.int32
  K_SPACE*: int32 = ' '.int32
  K_EXCLAIM*: int32 = '!'.int32
  K_QUOTEDBL*: int32 = '"'.int32
  K_HASH*: int32 = '#'.int32
  K_DOLLAR*: int32 = '$'.int32
  K_PERCENT*: int32 = '%'.int32
  K_AMPERSAND*: int32 = '&'.int32
  K_QUOTE*: int32 = '\''.int32
  K_LEFTPAREN*: int32 = '('.int32
  K_RIGHTPAREN*: int32 = ')'.int32
  K_ASTERISK*: int32 = '*'.int32
  K_PLUS*: int32 = '+'.int32
  K_COMMA*: int32 = ','.int32
  K_MINUS*: int32 = '-'.int32
  K_PERIOD*: int32 = '.'.int32
  K_SLASH*: int32 = '/'.int32
  K_0*: int32 = '0'.int32
  K_1*: int32 = '1'.int32
  K_2*: int32 = '2'.int32
  K_3*: int32 = '3'.int32
  K_4*: int32 = '4'.int32
  K_5*: int32 = '5'.int32
  K_6*: int32 = '6'.int32
  K_7*: int32 = '7'.int32
  K_8*: int32 = '8'.int32
  K_9*: int32 = '9'.int32
  K_COLON*: int32 = ':'.int32
  K_SEMICOLON*: int32 = ';'.int32
  K_LESS*: int32 = '<'.int32
  K_EQUALS*: int32 = '='.int32
  K_GREATER*: int32 = '>'.int32
  K_QUESTION*: int32 = '?'.int32
  K_AT*: int32 = '@'.int32 # Skip uppercase letters
  K_LEFTBRACKET*: int32 = '['.int32
  K_BACKSLASH*: int32 = '\\'.int32
  K_RIGHTBRACKET*: int32 = ']'.int32
  K_CARET*: int32 = '^'.int32
  K_UNDERSCORE*: int32 = '_'.int32
  K_BACKQUOTE*: int32 = '`'.int32
  K_a*: int32 = 'a'.int32
  K_b*: int32 = 'b'.int32
  K_c*: int32 = 'c'.int32
  K_d*: int32 = 'd'.int32
  K_e*: int32 = 'e'.int32
  K_f*: int32 = 'f'.int32
  K_g*: int32 = 'g'.int32
  K_h*: int32 = 'h'.int32
  K_i*: int32 = 'i'.int32
  K_j*: int32 = 'j'.int32
  K_k*: int32 = 'k'.int32
  K_l*: int32 = 'l'.int32
  K_m*: int32 = 'm'.int32
  K_n*: int32 = 'n'.int32
  K_o*: int32 = 'o'.int32
  K_p*: int32 = 'p'.int32
  K_q*: int32 = 'q'.int32
  K_r*: int32 =  'r'.int32
  K_s*: int32 =  's'.int32
  K_t*: int32 =  't'.int32
  K_u*: int32 =  'u'.int32
  K_v*: int32 =  'v'.int32
  K_w*: int32 =  'w'.int32
  K_x*: int32 =  'x'.int32
  K_y*: int32 =  'y'.int32
  K_z*: int32 =  'z'.int32

  K_DELETE*: int32 =  '\127'.int32
  K_CAPSLOCK*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK)

  K_F1*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1)
  K_F2*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2)
  K_F3*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3)
  K_F4*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4)
  K_F5*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5)
  K_F6*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6)
  K_F7*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7)
  K_F8*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8)
  K_F9*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9)
  K_F10*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10)
  K_F11*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11)
  K_F12*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12)

  K_PRINTSCREEN*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN)
  K_SCROLLLOCK*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK)
  K_PAUSE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE)
  K_INSERT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT)
  K_HOME*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME)
  K_PAGEUP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP)
  K_END*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END)
  K_PAGEDOWN*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN)
  K_RIGHT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT)
  K_LEFT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT)
  K_DOWN*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN)
  K_UP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP)

  K_NUMLOCKCLEAR*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR)
  K_KP_DIVIDE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE)
  K_KP_MULTIPLY*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY)
  K_KP_MINUS*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS)
  K_KP_PLUS*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS)
  K_KP_ENTER*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER)
  K_KP_1*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1)
  K_KP_2*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2)
  K_KP_3*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3)
  K_KP_4*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4)
  K_KP_5*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5)
  K_KP_6*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6)
  K_KP_7*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7)
  K_KP_8*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8)
  K_KP_9*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9)
  K_KP_0*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0)
  K_KP_PERIOD*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD)

  K_APPLICATION*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION)
  K_POWER*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER)
  K_KP_EQUALS*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS)
  K_F13*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13)
  K_F14*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14)
  K_F15*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15)
  K_F16*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16)
  K_F17*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17)
  K_F18*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18)
  K_F19*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19)
  K_F20*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20)
  K_F21*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21)
  K_F22*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22)
  K_F23*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23)
  K_F24*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24)
  K_EXECUTE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE)
  K_HELP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP)
  K_MENU*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU)
  K_SELECT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT)
  K_STOP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP)
  K_AGAIN*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN)
  K_UNDO*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO)
  K_CUT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT)
  K_COPY*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY)
  K_PASTE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE)
  K_FIND*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND)
  K_MUTE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE)
  K_VOLUMEUP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP)
  K_VOLUMEDOWN*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN)
  K_KP_COMMA*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA)
  K_KP_EQUALSAS400*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400)

  K_ALTERASE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE)
  K_SYSREQ*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ)
  K_CANCEL*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL)
  K_CLEAR*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR)
  K_PRIOR*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR)
  K_RETURN2*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2)
  K_SEPARATOR*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR)
  K_OUT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT)
  K_OPER*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER)
  K_CLEARAGAIN*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN)
  K_CRSEL*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL)
  K_EXSEL*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL)

  K_KP_00*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00)
  K_KP_000*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000)
  K_THOUSANDSSEPARATOR*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR)
  K_DECIMALSEPARATOR*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR)
  K_CURRENCYUNIT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT)
  K_CURRENCYSUBUNIT*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT)
  K_KP_LEFTPAREN*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN)
  K_KP_RIGHTPAREN*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN)
  K_KP_LEFTBRACE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE)
  K_KP_RIGHTBRACE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE)
  K_KP_TAB*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB)
  K_KP_BACKSPACE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE)
  K_KP_A*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A)
  K_KP_B*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B)
  K_KP_C*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C)
  K_KP_D*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D)
  K_KP_E*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E)
  K_KP_F*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F)
  K_KP_XOR*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR)
  K_KP_POWER*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER)
  K_KP_PERCENT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT)
  K_KP_LESS*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS)
  K_KP_GREATER*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER)
  K_KP_AMPERSAND*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND)
  K_KP_DBLAMPERSAND*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND)
  K_KP_VERTICALBAR*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR)
  K_KP_DBLVERTICALBAR*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR)
  K_KP_COLON*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON)
  K_KP_HASH*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH)
  K_KP_SPACE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE)
  K_KP_AT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT)
  K_KP_EXCLAM*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM)
  K_KP_MEMSTORE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE)
  K_KP_MEMRECALL*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL)
  K_KP_MEMCLEAR*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR)
  K_KP_MEMADD*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD)
  K_KP_MEMSUBTRACT*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT)
  K_KP_MEMMULTIPLY*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY)
  K_KP_MEMDIVIDE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE)
  K_KP_PLUSMINUS*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS)
  K_KP_CLEAR*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR)
  K_KP_CLEARENTRY*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY)
  K_KP_BINARY*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY)
  K_KP_OCTAL*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL)
  K_KP_DECIMAL*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL)
  K_KP_HEXADECIMAL*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL)

  K_LCTRL*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL)
  K_LSHIFT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT)
  K_LALT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT)
  K_LGUI*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI)
  K_RCTRL*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL)
  K_RSHIFT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT)
  K_RALT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT)
  K_RGUI*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI)

  K_MODE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE)

  K_AUDIONEXT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT)
  K_AUDIOPREV*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV)
  K_AUDIOSTOP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP)
  K_AUDIOPLAY*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY)
  K_AUDIOMUTE*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE)
  K_MEDIASELECT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT)
  K_WWW*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW)
  K_MAIL*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL)
  K_CALCULATOR*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR)
  K_COMPUTER*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER)
  K_AC_SEARCH*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH)
  K_AC_HOME*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME)
  K_AC_BACK*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK)
  K_AC_FORWARD*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD)
  K_AC_STOP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP)
  K_AC_REFRESH*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH)
  K_AC_BOOKMARKS*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS)

  K_BRIGHTNESSDOWN*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSDOWN)
  K_BRIGHTNESSUP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP)
  K_DISPLAYSWITCH*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH)
  K_KBDILLUMTOGGLE*: int32 =
    SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMTOGGLE)
  K_KBDILLUMDOWN*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN)
  K_KBDILLUMUP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP)
  K_EJECT*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT)
  K_SLEEP*: int32 =  SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP)

type
  Keymod* {.size: sizeof(int32).} = enum
    KMOD_NONE = 0x0000, KMOD_LSHIFT = 0x0001, KMOD_RSHIFT = 0x0002,
    KMOD_LCTRL= 0x0040, KMOD_RCTRL  = 0x0080, KMOD_LALT   = 0x0100,
    KMOD_RALT = 0x0200, KMOD_LGUI   = 0x0400, KMOD_RGUI   = 0x0800,
    KMOD_NUM  = 0x1000, KMOD_CAPS   = 0x2000, KMOD_MODE   = 0x4000,
    KMOD_RESERVED=0x8000

converter toInt*(some: Keymod): int32 = int32(some)

template KMOD_CTRL*: expr = (KMOD_LCTRL or KMOD_RCTRL)
template KMOD_SHIFT*:expr = (KMOD_LSHIFT or KMOD_RSHIFT)
template KMOD_ALT*: expr = (KMOD_LALT or KMOD_RALT)
template KMOD_GUI*: expr = (KMOD_LGUI or KMOD_RGUI)

{.deprecated: [TScancode: Scancode].}
{.deprecated: [TKeymod: Keymod].}


